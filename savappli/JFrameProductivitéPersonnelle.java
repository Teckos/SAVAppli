/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package savappli;

import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author khaoula
 */
public class JFrameProductivitéPersonnelle extends javax.swing.JFrame {
    Statement stm;
    ResultSet rs;
    DefaultTableModel dt;
    connexion maConnexion=new connexion();

    /**
     * Creates new form JFrameProductivitéPersonnelle
     */
    /* void Remplir_TableProd(){
          try{
             // dt.setRowCount(0);
              String sql="select N_Serie,Date_E,N_Dossier, from facture where N_Facture_V NOT IN (select N_Facture_V from facture where Date_Facture='0000-00-00')";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
              TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
    }*/
         
    
     private void Remplir_ComboIntervention(){
         ComboIntervention.removeAllItems();
          try{
              String sql="select distinct(type_In) from intervention ";
              stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               while(rs.next())
                {
                  String name=rs.getString("type_In");
                  ComboIntervention.addItem(name);
                  }
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
    } 
     
    
    public JFrameProductivitéPersonnelle() {
        initComponents();
        Remplir_ComboIntervention();
        matin.setEnabled(true);
        midi.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableProd = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        n_util = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nb_rep = new javax.swing.JTextField();
        nb_nn = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ComboIntervention = new javax.swing.JComboBox();
        midi = new javax.swing.JCheckBox();
        matin = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Récapitulatif Personnel");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("N° Utilisateur :");

        TableProd.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TableProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableProd);

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText("Chercher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        n_util.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        n_util.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n_utilActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 102));
        jLabel3.setText("Nombre d'Appareils Réparés  :");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Nombre d'Appareils Non Réparés   :");

        nb_rep.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nb_rep.setForeground(new java.awt.Color(0, 204, 102));

        nb_nn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nb_nn.setForeground(new java.awt.Color(255, 0, 0));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Total  :");

        total.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Type Intervention :");

        ComboIntervention.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        midi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        midi.setText("  Après-Midi");
        midi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midiActionPerformed(evt);
            }
        });

        matin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        matin.setText("  Matin");
        matin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(n_util, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(8, 8, 8)
                                        .addComponent(ComboIntervention, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(midi)
                                    .addComponent(matin, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(77, 77, 77)
                                .addComponent(jButton1)
                                .addGap(214, 214, 214))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(138, 138, 138))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nb_rep, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nb_nn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboIntervention, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(matin))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(n_util, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(midi)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nb_rep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nb_nn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(881, 714));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       String N_U=n_util.getText();
       // String D_R=date_r.getText();
       
       /////******Récap du Jour****************////////////////////////////////////
         if(matin.isSelected()==false && midi.isSelected()==false)
        {      

       try{
             // dt.setRowCount(0);
              String sql="select A.N_Serie,A.N_Dossier,A.Date_E as Date_Entrée,A.Date_R as Date_Réparation,A.Type_App ,I.type_In AS Intervention,A.Etat,P.type as Panne,A.Description,MO.Type_MO as Main_Oeuvre,MA.Nom as Façade,MA.Type_Mat as Appareil,MA.Couleur\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" +                      
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') ORDER BY A.Etat,MO.Main_Oeuvre,Façade";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
              TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         String N_R=nb_rep.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr_rep\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') AND A.Etat='Réparé'";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr_rep");
                
              String n=String.valueOf(nb);
               nb_rep.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         
          String N_N=nb_nn.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr_nn\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" +                      
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') AND A.Etat='Non Réparé'";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr_nn");
                
              String n=String.valueOf(nb);
               nb_nn.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         
          String T=total.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') ";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr");
                
              String n=String.valueOf(nb);
               total.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
        }
          /////////////////*************Récap Matin**********************////////////////////
        else if(matin.isSelected()==true && midi.isSelected()==false)
        {      

       try{
             // dt.setRowCount(0);
              String sql="select A.N_Serie,A.N_Dossier,A.Date_E as Date_Entrée,A.Date_R as Date_Réparation,A.Type_App ,I.type_In AS Intervention,A.Etat,P.type as Panne,A.Description,MO.Type_MO as Main_Oeuvre,MA.Nom as Façade,MA.Type_Mat as Appareil,MA.Couleur\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Heure_R BETWEEN '8:00:00' AND '13:50:00'\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') ORDER BY A.Etat,MO.Main_Oeuvre,Façade";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
              TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         String N_R=nb_rep.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr_rep\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Heure_R BETWEEN '8:00:00' AND '13:50:00'\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') AND A.Etat='Réparé'";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr_rep");
                
              String n=String.valueOf(nb);
               nb_rep.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         
          String N_N=nb_nn.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr_nn\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
 "AND A.Heure_R BETWEEN '8:00:00' AND '13:50:00'\n" +                      
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') AND A.Etat='Non Réparé'";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr_nn");
                
              String n=String.valueOf(nb);
               nb_nn.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         
          String T=total.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Heure_R BETWEEN '8:00:00' AND '13:50:00'\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') ";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr");
                
              String n=String.valueOf(nb);
               total.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
        }
         
          /////////////////*************Récap Après-Midi**********************////////////////////
         if(matin.isSelected()==false && midi.isSelected()==true)
        {      

       try{
             // dt.setRowCount(0);
              String sql="select A.N_Serie,A.N_Dossier,A.Date_E as Date_Entrée,A.Date_R as Date_Réparation,A.Type_App ,I.type_In AS Intervention,A.Etat,P.type as Panne,A.Description,MO.Type_MO as Main_Oeuvre,MA.Nom as Façade,MA.Type_Mat as Appareil,MA.Couleur\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Heure_R BETWEEN '14:00:00' AND '19:00:00'\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') ORDER BY A.Etat,MO.Main_Oeuvre,Façade";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
              TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         String N_R=nb_rep.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr_rep\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Heure_R BETWEEN '14:00:00' AND '19:00:00'\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') AND A.Etat='Réparé'";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr_rep");
                
              String n=String.valueOf(nb);
               nb_rep.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         
          String N_N=nb_nn.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr_nn\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
 "AND A.Heure_R BETWEEN '14:00:00' AND '19:00:00'\n" +                      
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') AND A.Etat='Non Réparé'";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr_nn");
                
              String n=String.valueOf(nb);
               nb_nn.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
         
          String T=total.getText();
         try{
             // dt.setRowCount(0);
              String sql="select count(A.N_Serie) as nbr\n" +
"from appareil A,materiel MA,intervention I,panne P,maindoeuvre MO,intervenant II\n" +
"where MA.`Id_Materiel`=A.`Id_Materiel`\n" +
"AND I.`Id_Intervention`=A.`Id_Intervention`\n" +
"AND P.`Id_panne`=A.`Id_panne`\n" +
"AND MO.`Id_MO`=A.`Id_MO`\n" +
"AND II.`Id_Intervenant`=A.`Id_Intervenant`\n" +
"AND A.Date_R=CURRENT_DATE()\n" + 
"AND A.Heure_R BETWEEN '14:00:00' AND '19:00:00'\n" + 
"AND A.Id_Intervenant='"+N_U+"' AND I.type_In='"+ComboIntervention.getSelectedItem()+"' AND A.N_BL=(select Id_Intervention from intervention where type_In='"+ComboIntervention.getSelectedItem()+"') ";
             stm=maConnexion.get_connexion().createStatement();
              rs=stm.executeQuery(sql);
               if(rs.first())
                {
             int nb = rs.getInt("nbr");
                
              String n=String.valueOf(nb);
               total.setText(n);}
              //TableProd.setModel(DbUtils.resultSetToTableModel(rs));
               }
           catch(Exception e){
           JOptionPane.showMessageDialog(null,e); 
              }
        }
                n_util.setText("");
                matin.setEnabled(true);
        midi.setEnabled(true);
        matin.setSelected(false);
        midi.setSelected(false);
                

    }//GEN-LAST:event_jButton1ActionPerformed

    private void n_utilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n_utilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_n_utilActionPerformed

    private void midiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midiActionPerformed
     if(midi.isSelected()==true)
      {
        matin.setEnabled(false);
      }
      else if(midi.isSelected()==false)
      {
        matin.setEnabled(true);
      }
    }//GEN-LAST:event_midiActionPerformed

    private void matinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matinActionPerformed
      if(matin.isSelected()==true)
      {
        midi.setEnabled(false);
      }
      else if(matin.isSelected()==false)
      {
        midi.setEnabled(true);
      }
    }//GEN-LAST:event_matinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameProductivitéPersonnelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameProductivitéPersonnelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameProductivitéPersonnelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameProductivitéPersonnelle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameProductivitéPersonnelle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboIntervention;
    private javax.swing.JTable TableProd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox matin;
    private javax.swing.JCheckBox midi;
    private javax.swing.JPasswordField n_util;
    private javax.swing.JTextField nb_nn;
    private javax.swing.JTextField nb_rep;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables
}
